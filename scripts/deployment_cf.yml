# AWSTemplateFormatVersion: 2010-09-09
# Parameters:
#   CodeCommitRepo:
#     Description: trology-client
#     Type: String
#     Default: trology-client
#   CodeCommitBranch:
#     Description: master
#     Type: String
#     Default: master
  
# Resources:
#   CodePipeline:
#     Type: 'AWS::CodePipeline::Pipeline'
#     Properties:
#       RoleArn: !GetAtt CodePipeLineRole.Arn
#       ArtifactStore:
#         Location: !Ref PipelineBucket
#         Type: S3
#       Stages:
#         - 
#           Name: Source
#           Actions: 
#             - 
#               Name: SourceAction
#               ActionTypeId: 
#                 Category: Source
#                 Owner: AWS
#                 Provider: CodeCommit
#                 Version: 1
#               OutputArtifacts: 
#                 - 
#                   Name: MyApp
#               Configuration:
#                 BranchName: !Ref CodeCommitBranch
#                 PollForSourceChanges: 'false'
#                 RepositoryName: !Ref CodeCommitRepo
#         - 
#           Name: Build
#           Actions: 
#             - 
#               Name: BuildAction
#               ActionTypeId: 
#                 Category: Build
#                 Owner: AWS
#                 Version: 1
#                 Provider: CodeBuild
#               InputArtifacts: 
#                 - 
#                   Name: MyApp
#               OutputArtifacts: 
#                 - 
#                   Name: MyAppBuild
#               Configuration:
#                 ProjectName: !Ref CodeBuild
#   CodeBuildRole:
#     Type: AWS::IAM::Role
#     Properties:
#       AssumeRolePolicyDocument:
#         Version: "2012-10-17"
#         Statement:
#           - 
#             Effect: Allow
#             Principal:
#               Service:
#                 - "codebuild.amazonaws.com"
#             Action:
#               - "sts:AssumeRole"
#       Path: /service-role/
#       Policies:
#         - PolicyName: root
#           PolicyDocument:
#             Version: "2012-10-17"
#             Statement: 
#               - 
#                 Effect: Allow
#                 Action:
#                   - "s3:GetObject"
#                   - "s3:GetObjectVersion"
#                   - "s3:GetBucketVersioning"
#                   - "s3:PutObject"
#                   - "s3:PutObjectAcl"
#                   - "s3:PutObjectVersionAcl"
#                 Resource: 
#                   - !GetAtt PipelineBucket.Arn
#                   - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
#               - 
#                 Effect: Allow
#                 Action:
#                   - "s3:GetObject"
#                   - "s3:GetObjectVersion"
#                   - "s3:GetBucketVersioning"
#                   - "s3:PutObject"
#                   - "s3:PutObjectAcl"
#                   - "s3:PutObjectVersionAcl"
#                 Resource: 
#                   - !GetAtt DeployBucket.Arn
#                   - !Join ['', [!GetAtt DeployBucket.Arn, "/*"]]
#               -
#                 Effect: Allow
#                 Action:
#                   - "logs:CreateLogGroup"
#                   - "logs:CreateLogStream"
#                   - "logs:PutLogEvents"
#                   - "cloudfront:CreateInvalidation"
#                 Resource:
#                   - "*"
#   CodePipeLineRole:
#     Type: AWS::IAM::Role
#     Properties:
#       AssumeRolePolicyDocument:
#         Version: "2012-10-17"
#         Statement:
#           - 
#             Effect: Allow
#             Principal:
#               Service:
#                 - "codepipeline.amazonaws.com"
#             Action:
#               - "sts:AssumeRole"
#       Policies:
#         - PolicyName: root
#           PolicyDocument:
#             Version: "2012-10-17"
#             Statement: 
#               - 
#                 Effect: Allow
#                 Action:
#                   - "s3:GetObject"
#                   - "s3:GetObjectVersion"
#                   - "s3:GetBucketVersioning"
#                   - "s3:GetObjectAcl"
#                   - "s3:PutObject"
#                   - "s3:PutObjectAcl"
#                   - "s3:PutObjectVersionAcl"
#                 Resource: 
#                   - !GetAtt PipelineBucket.Arn
#                   - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
#               - 
#                 Effect: Allow  
#                 Action:
#                   - "codebuild:BatchGetBuilds"
#                   - "codebuild:StartBuild"
#                 Resource: "*"
#               -
#                 Effect: Allow  
#                 Action:
#                   - "codecommit:GetRepository"
#                   - "codecommit:GetBranch"
#                   - "codecommit:GetCommit"
#                   - "codecommit:UploadArchive"
#                   - "codecommit:GetUploadArchiveStatus"
#                   - "codecommit:CancelUploadArchive"
#                 Resource: "*"
#   CodeBuild:
#     Type: 'AWS::CodeBuild::Project'
#     Properties:
#       Name: !Sub ${AWS::StackName}-CodeBuild
#       ServiceRole: !GetAtt CodeBuildRole.Arn
#       Artifacts:
#         Type: CODEPIPELINE
#         Name: MyProject
#       Source: 
#         Type: CODEPIPELINE
#       Environment:
#         ComputeType: BUILD_GENERAL1_SMALL
#         Type: LINUX_CONTAINER
#         Image: "aws/codebuild/nodejs:8.11.0"
#       Source:
#         Type: CODEPIPELINE
#         BuildSpec: !Sub |
#           version: 0.1
#           phases:
#             pre_build:
#               commands:
#                 - echo Installing source NPM dependencies...
#                 - npm install
#             build:
#               commands:
#                 - echo Build started on `date`
#                 - npm run build
#             post_build:
#               commands:
#                 - aws s3 cp --recursive --acl public-read ./build s3://${DeployBucket}/ 
#                 - aws s3 cp --acl public-read --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/service-worker.js s3://${DeployBucket}/
#                 - aws s3 cp --acl public-read --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/index.html s3://${DeployBucket}/
#           artifacts:
#             files:
#               - '**/*'
#             base-directory: build
#   PipelineBucket: 
#     Type: 'AWS::S3::Bucket'
#     Properties:
#       BucketName: codepipelinebucketreact
#   DeployBucket:
#     Type: 'AWS::S3::Bucket'
#     Properties:
#       WebsiteConfiguration:
#         IndexDocument: index.html
#       AccessControl: PublicReadWrite
#       CorsConfiguration:
#         CorsRules:
#         - AllowedOrigins: ['*']
#           AllowedMethods: [GET]